name: Deployment
on:
  push:
    branches:
      - main
      - dev
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        id: test
        run: npm test
      - name: Report failed tests
        if: failure() && steps.test.outcome == 'failure'
        run: |
          echo "Some tests have failed. Reporting..."
  build:
    needs: test
    runs-on: ubuntu-latest
    env:
      DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      DOCKER_USERNAME: wlaung

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci

      - name: Set up environment variables
        run: |
          cp .env.example .env
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "Set production environment variables"
            echo "${{ secrets.PROD_ENV }}" > .env
          else
            echo "Set development environment variables"
            echo "${{ secrets.DEV_ENV }}" > .env
          fi
          cat .env
      - name: Build application
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_ACCESS_TOKEN
          docker buildx build --platform linux/amd64,linux/arm64 -t --push $DOCKER_USERNAME/myapp:latest .

  report:
    needs: deploy
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Report deployment failure
        run: echo "Deployment failed. Please check the logs above for details."
